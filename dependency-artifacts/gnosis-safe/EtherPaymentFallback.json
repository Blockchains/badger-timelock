{
  "contractName": "EtherPaymentFallback",
  "abi": [
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"methods\":{},\"title\":\"EtherPaymentFallback - A contract that has a fallback to accept ether payments\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/present/code/safe-contracts/contracts/common/EtherPaymentFallback.sol\":\"EtherPaymentFallback\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/present/code/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0xc7c13624c8b9297a78f039ee25d15628351eef7be6e45d9425faffaa2baccecb\",\"urls\":[\"bzz-raw://3acef56d25a012666fe3800c44669965cef8f4eb13826b4b8f2e7d784450a447\",\"dweb:/ipfs/QmQtQkUDoGW8cQPNAFB8ttSfQQkmqVPPqVH2zMmKmtSDY5\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603b80601d6000396000f3fe608060405200fea265627a7a72315820037b7e86c45e3efffb8bf8e8c10bc176d7fa808d60a19e5a80398e920bb0c79764736f6c63430005110032",
  "deployedBytecode": "0x608060405200fea265627a7a72315820037b7e86c45e3efffb8bf8e8c10bc176d7fa808d60a19e5a80398e920bb0c79764736f6c63430005110032",
  "sourceMap": "175:155:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;175:155:8;;;;;;;",
  "deployedSourceMap": "175:155:8:-;;;",
  "source": "pragma solidity >=0.5.0 <0.7.0;\n\n\n/// @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract EtherPaymentFallback {\n\n    /// @dev Fallback function accepts Ether transactions.\n    function ()\n        external\n        payable\n    {\n\n    }\n}\n",
  "sourcePath": "/Users/present/code/safe-contracts/contracts/common/EtherPaymentFallback.sol",
  "ast": {
    "absolutePath": "/Users/present/code/safe-contracts/contracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        2032
      ]
    },
    "id": 2033,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2027,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 2032,
        "linearizedBaseContracts": [
          2032
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2030,
              "nodeType": "Block",
              "src": "320:8:8",
              "statements": []
            },
            "documentation": "@dev Fallback function accepts Ether transactions.",
            "id": 2031,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:8"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:8"
            },
            "scope": 2032,
            "src": "271:57:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2033,
        "src": "175:155:8"
      }
    ],
    "src": "0:331:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/present/code/safe-contracts/contracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        2032
      ]
    },
    "id": 2033,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2027,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 2032,
        "linearizedBaseContracts": [
          2032
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2030,
              "nodeType": "Block",
              "src": "320:8:8",
              "statements": []
            },
            "documentation": "@dev Fallback function accepts Ether transactions.",
            "id": 2031,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:8"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:8"
            },
            "scope": 2032,
            "src": "271:57:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2033,
        "src": "175:155:8"
      }
    ],
    "src": "0:331:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-08-26T20:10:00.108Z",
  "devdoc": {
    "author": "Richard Meissner - <richard@gnosis.pm>",
    "methods": {},
    "title": "EtherPaymentFallback - A contract that has a fallback to accept ether payments"
  },
  "userdoc": {
    "methods": {}
  }
}